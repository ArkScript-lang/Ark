#!/usr/bin/bash

Reset='\033[0m'
Black='\033[0;30m'
Red='\033[0;31m'
Green='\033[0;32m'
Yellow='\033[0;33m'
Blue='\033[0;34m'
Purple='\033[0;35m'
Cyan='\033[0;36m'
White='\033[0;37m'

passed=0
failed=0

for f in out/*-test ; do
    echo -ne "TEST ${Cyan}${f}${Reset} "
    expected_out=$(cat "expected/${f}.txt")

    start=$(date +%s)

    output=$("./${f}")
    code=$?

    end=$(date +%s)
    runtime=$((end-start))

    if [[ $code != 0 && $expected_out == $output ]]; then
        echo -ne "${Red}FAILED${Reset} "
        ((failed=failed+1))
    else
        echo -ne "${Green}PASSED${Reset} "
        ((passed=passed+1))
    fi

    echo -e " -- in ${Purple}${runtime}sec${Reset}"

    # display output on error
    if [[ $code != 0 ]]; then
        echo -e "    ${Yellow}Output${Reset}:\n${output}"
    fi
done

echo
echo -e "${Cyan}${passed}${Reset} passed, ${Purple}${failed}${Reset} failed"

if [[ $failed != 0 ]]; then
    exit 1
else
    exit 0
fi