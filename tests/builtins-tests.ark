(import "tests-tools.ark")

(let builtin-tests (fun () {
    (mut tests 0)
    (let start-time (time))

    (let base-list [1 2 3])
    (let base-list-enhanced (concat base-list [4 5]))

    (set tests (assert-eq (append (append base-list 4) 5) base-list-enhanced "Builtins operations" tests))
    (set tests (assert-eq (concat base-list [4 5]) base-list-enhanced "Builtins operations" tests))
    (set tests (assert-eq (type []) "List" "Builtins operations" tests))
    (set tests (assert-eq (len []) 0 "Builtins operations" tests))
    (set tests (assert-eq (list:reverse base-list) [3 2 1] "Builtins operations" tests))
    (set tests (assert-eq (list:reverse []) [] "Builtins operations" tests))
    (set tests (assert-eq (list:find [] nil) nil "Builtins operations" tests))
    (set tests (assert-eq (list:find [12] 12) 0 "Builtins operations" tests))
    (set tests (assert-eq (list:find [1 2 3] 2) 1 "Builtins operations" tests))
    (set tests (assert-eq (list:find [12] nil) nil "Builtins operations" tests))
    (set tests (assert-eq (list:removeAt base-list 1) [1 3] "Builtins operations" tests))

    (recap "Builtins operations passed" tests (- (time) start-time))

    tests
}))

(let passed-builtins (builtin-tests))