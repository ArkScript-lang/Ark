# If the number is even, divide it by two.
# If the number is odd, triple it and add one.

(let get? (fun (seq idx default)
    (if (> (len seq) idx)
        (@ seq idx)
        default)))

(let n (toNumber (get? sys:args 0 "10")))

(let collatz (fun (num)
    (if (= 0 (mod num 2))
        (math:floor (/ num 2))
        (math:floor (+ 1 (* 3 num))))))

(mut a_i n)
(mut iterations 0)
(while (!= 1 a_i) {
    (print a_i)
    (set a_i (collatz a_i))
    (set iterations (+ 1 iterations))})

(print "Reached 1 in " iterations " iteration(s)")
