{"type": "Begin", "children": [{"type": "Import", "package": "std.Exceptions", "glob": false, "symbols": []}, {"type": "Let", "name": {"type": "Symbol", "name": "invert"}, "value": {"type": "Fun", "args": [{"type": "Symbol", "name": "x"}], "body": {"type": "Begin", "children": [{"type": "If", "condition": {"type": "FunctionCall", "name": {"type": "Symbol", "name": "="}, "args": [{"type": "Symbol", "name": "x"}, {"type": "Number", "value": 0}]}, "then": {"type": "FunctionCall", "name": {"type": "Symbol", "name": "throw"}, "args": [{"type": "String", "value": "cannot divide by zero"}]}, "else": {"type": "FunctionCall", "name": {"type": "Symbol", "name": "return"}, "args": [{"type": "FunctionCall", "name": {"type": "Symbol", "name": "/"}, "args": [{"type": "Number", "value": 1}, {"type": "Symbol", "name": "x"}]}]}}]}}}, {"type": "FunctionCall", "name": {"type": "Symbol", "name": "try"}, "args": [{"type": "FunctionCall", "name": {"type": "Symbol", "name": "invert"}, "args": [{"type": "Number", "value": 0}]}, {"type": "Fun", "args": [{"type": "Symbol", "name": "inverted"}], "body": {"type": "FunctionCall", "name": {"type": "Symbol", "name": "print"}, "args": [{"type": "Symbol", "name": "inverted"}]}}, {"type": "Fun", "args": [{"type": "Symbol", "name": "err"}], "body": {"type": "FunctionCall", "name": {"type": "Symbol", "name": "print"}, "args": [{"type": "Symbol", "name": "err"}]}}]}]}