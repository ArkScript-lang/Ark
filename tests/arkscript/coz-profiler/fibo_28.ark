# an example of a classic recursive function
(let fibo (fun (n)
    (if (< n 2)
        # then, its the last value evaluated in this case, thus it's the return value
        n
        # else, the last value evaluated in this branch as well
        (+ (fibo (- n 1)) (fibo (- n 2)))
    ))
)

(let start (time))
(mut i 0)
(let limit (if (!= 0 (len sys:args))
    (if (not (nil? (toNumber (@ sys:args 0))))
        (toNumber (@ sys:args 0))
        10)
    10))

(print "limit: " limit)

(while (< i limit) {
    (fibo 28)
    (set i (+ i 1))
})
(let end (- (time) start))
(print end " " (* (/ end limit) 1000) "ms per run")
