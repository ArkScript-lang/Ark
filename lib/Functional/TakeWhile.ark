(let takeWhile (fun (_f _L) {
    (mut _index 0)
    (mut _output [])
    (mut _continue true)

    (while (and (< _index (len _L)) _continue) {
        (if (_f (@ _L _index)) {
                (set _output (append _output (@ _L _index)))
                (set _index (+ 1 _index))
            }
            (set _continue false)
        )
    })
    _output
}))