name: "Create a release"

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Name of version  (ie 5.5.0)'
        required: true
      isDraft:
        description: 'Should we create a draft release?'
        required: false
        default: 'true'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifact Linux GCC 9
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: linux-gcc-9
          path: ark-linux-gcc-9

      - name: Download artifact Linux GCC 8
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: linux-gcc-8
          path: ark-linux-gcc-8

      - name: Download artifact Linux Clang 10
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: linux-clang-10
          path: ark-linux-clang-10

      - name: Download artifact Windows MSVC 19
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: windows-msvc-19
          path: ark-windows-msvc-19

      - name: Download artifact Windows MSVC 17
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: windows-msvc-17
          path: ark-windows-msvc-17

      - name: Download artifact MacOS Clang
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: macos-clang-12
          path: ark-macos-clang-12

      - name: Download artifact Windows InnoSetup installer
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          branch: dev
          name: arkscript.exe
          path: ark-windows-installer

      - name: Make ZIPs
        shell: bash
        run: |
          for i in ark-*; do
            name=`echo $i | cut -c 5-`
            (cd ${i} && zip -r ../${name}.zip ./)
          done

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.versionName }}
          release_name: ArkScript v${{ github.event.inputs.versionName }}
          draft: ${{ github.event.inputs.isDraft }}
          prerelease: false
          body: ${{ steps.extract-release-notes.outputs.release_notes }}

      - uses: sarisia/actions-status-discord@v1
        if: ${{ github.event.inputs.isDraft }} == 'true'
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "A new release (v${{ github.event.inputs.versionName }}) has been drafted"
          description: |
            Please review it **before publishing it**, as this action would trigger workflows and GitHub webhooks,
            notifying everyone of a new release! You want to be sure **everything** is correct
            [Release draft URL](${{ steps.create_release.outputs.html_url }})
          nodetail: true
          username: GitHub Actions

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-clang.zip
          asset_name: macos-clang.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-gcc-8.zip
          asset_name: linux-gcc-8.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-gcc-9.zip
          asset_name: linux-gcc-9.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-clang-10.zip
          asset_name: linux-clang-10.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-msvc-19.zip
          asset_name: windows-msvc-19.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-msvc-17.zip
          asset_name: windows-msvc-17.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-clang-12.zip
          asset_name: macos-clang-12.zip
          asset_content_type: application/zip

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-installer.zip
          asset_name: windows-installer.zip
          asset_content_type: application/zip
