(import "List.ark")
(import "String.ark")

(let to-base (fun (n base) {
    (let o (str:ord n))
    (let v (if (and (>= o 48) (<= o 57))
            (- o 48)
        (if (and (>= o 97) (<= o 122))
            (- o 87)
        (if (and (>= o 65) (<= 90))
            (- o 55)
            o))))
    (mod v base)
}))

(let sum-digits (fun (n base) {
    (let number (if (not (= "String" (type n))) (toString n) n))
    (list:reduce
        (list:map number (fun (e) (to-base e base)))
        (fun (a b) (+ a b)))
}))

(print (sum-digits 1 10))       # 1
(print (sum-digits 1234 10))    # 10
(print (sum-digits "fe" 16))    # 29
(print (sum-digits "f0e" 16))   # 29
