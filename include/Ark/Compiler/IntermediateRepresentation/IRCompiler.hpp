/**
 * @file IRCompiler.hpp
 * @author Alexandre Plateau (lexplt.dev@gmail.com)
 * @brief Compile the intermediate representation to bytecode
 * @version 0.1
 * @date 2024-10-05
 *
 * @copyright Copyright (c) 2024
 *
 */

#ifndef ARK_COMPILER_INTERMEDIATEREPRESENTATION_IRCOMPILER_HPP
#define ARK_COMPILER_INTERMEDIATEREPRESENTATION_IRCOMPILER_HPP

#include <vector>
#include <string>

#include <Ark/Platform.hpp>
#include <Ark/Logger.hpp>
#include <Ark/Compiler/Common.hpp>
#include <Ark/Compiler/ValTableElem.hpp>
#include <Ark/Compiler/IntermediateRepresentation/Entity.hpp>

namespace Ark::internal
{
    class ARK_API IRCompiler final
    {
    public:
        /**
         * @brief Create a new IRCompiler
         *
         * @param debug debug level
         */
        explicit IRCompiler(unsigned debug);

        /**
         * @brief Turn a given IR into bytecode
         *
         * @param pages list of lists of IR entities generated by the compiler
         * @param symbols symbol table generated by the compiler
         * @param values value table generated by the compiler
         */
        void process(const std::vector<IR::Block>& pages, const std::vector<std::string>& symbols, const std::vector<ValTableElem>& values);

        /**
         * @brief Return the constructed bytecode object
         *
         * @return const bytecode_t&
         */
        [[nodiscard]] const bytecode_t& bytecode() const noexcept;

    private:
        Logger m_logger;
        bytecode_t m_bytecode;
        std::vector<IR::Block> m_ir;

        void compile();

        /**
         * @brief Push a word to the m_bytecode
         * @param word
         */
        void pushWord(const Word& word);

        /**
         * @brief Push the file headers (magic, version used, timestamp)
         *
         */
        void pushFileHeader() noexcept;

        /**
         * @brief Push the symbols and values tables
         *
         */
        void pushSymAndValTables(const std::vector<std::string>& symbols, const std::vector<ValTableElem>& values);
    };
}

#endif  // ARK_COMPILER_INTERMEDIATEREPRESENTATION_IRCOMPILER_HPP
